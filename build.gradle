import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.jetbrains.kotlin.jvm' version '1.9.10'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.10'
	id 'jacoco'
}

group = 'mx.edu.iuv'
version = '1.0'

ext {
	mockkVersion = '1.13.9'
	mysqlConnectorVersion = '8.0.28'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

jacoco {
	toolVersion = "0.8.11"
	reportsDirectory = layout.buildDirectory.dir("jacoco")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-webflux")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("io.projectreactor.kotlin:reactor-kotlin-extensions")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
	implementation("mysql:mysql-connector-java:${mysqlConnectorVersion}")
	implementation("org.springframework.boot:spring-boot-starter-mail")
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
	implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
	implementation("org.apache.poi:poi:5.2.4")
	implementation("org.apache.poi:poi-ooxml:5.2.4")
	
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("io.projectreactor:reactor-test")
	testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
	testImplementation("io.mockk:mockk:${mockkVersion}")
}

//tasks.withType(KotlinCompile) {
//	kotlinOptions {
//		freeCompilerArgs += '-Xjsr305=strict'
//		jvmTarget = '17'
//	}
//}

tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
		jvmTarget.set(JvmTarget.JVM_17)
		freeCompilerArgs.add("-Xjsr305=strict")
	}
}


tasks.test {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
	dependsOn(tasks.test)
}
